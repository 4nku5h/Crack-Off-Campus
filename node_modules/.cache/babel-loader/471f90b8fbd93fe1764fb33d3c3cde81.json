{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hacke\\\\Desktop\\\\React\\\\crack-off-campus\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport LoadingComponent from './Component/Loading/LoadingComponent';\nimport LoginSignupComponent from './Component/LoginSignup/LoginSignupComponent';\nimport JobsComponent from './Component/CrackOffCampus-Jobs/JobsComponent';\nimport MainComponent from './Component/MainComponent'; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedIn, setUserDetatil, setInformation_announcementDetails, setJobsData, fetchData } from \"../src/redux/actions/actions\";\nimport store from './redux/store/store'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isDataFetched = useSelector(state => state.isDataFetched);\n  const isLoggedin = useSelector(state => state.isLoggedin);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", isDataFetched == false ? /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : //Data Fetched Sussessfully\n    // checking for Login\n    !isLoggedin ?\n    /*#__PURE__*/\n    // Need To Login\n    _jsxDEV(LoginSignupComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this) :\n    /*#__PURE__*/\n    // LoggedIn successfully or Already LoggedIn\n    // After Login : CrackoffCampus Is the Main Component\n    _jsxDEV(MainComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"zQ3cs2FqUr667+ZfwhZS87CtkkY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hacke/Desktop/React/crack-off-campus/src/App.js"],"names":["React","LoadingComponent","LoginSignupComponent","JobsComponent","MainComponent","useDispatch","useSelector","setLoggedIn","setUserDetatil","setInformation_announcementDetails","setJobsData","fetchData","store","App","isDataFetched","state","isLoggedin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,kCAAtC,EAA0EC,WAA1E,EAAuFC,SAAvF,QAAwG,8BAAxG;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,aAAa,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,UAAU,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,oBACKF,aAAa,IAAE,KAAhB,gBACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,GAIQ;AACA;AACC,KAACE,UAAF;AAAA;AAEQ;AACA,YAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAMQ;AACA;AACA,YAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAfpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA3BQH,G;UACiBP,W,EACHA,W;;;KAFdO,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport LoadingComponent from './Component/Loading/LoadingComponent';\nimport LoginSignupComponent from './Component/LoginSignup/LoginSignupComponent';\nimport JobsComponent from './Component/CrackOffCampus-Jobs/JobsComponent';\nimport MainComponent from './Component/MainComponent';\n\n//redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedIn, setUserDetatil, setInformation_announcementDetails, setJobsData, fetchData } from \"../src/redux/actions/actions\";\nimport store from './redux/store/store';\n//\n\nfunction App() {\n    const isDataFetched = useSelector(state => state.isDataFetched);\n    const isLoggedin = useSelector(state => state.isLoggedin)\n\n    return (\n        <div className=\"App\" > {\n            (isDataFetched==false) ? (\n                <LoadingComponent />\n            ) :\n                (\n                    //Data Fetched Sussessfully\n                    // checking for Login\n                    (!isLoggedin) ?\n                        (\n                            // Need To Login\n                            <LoginSignupComponent />\n                        ) :\n                        (\n                            // LoggedIn successfully or Already LoggedIn\n                            // After Login : CrackoffCampus Is the Main Component\n                            <MainComponent />\n                        )\n                )\n        }\n        </div>\n    )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}