{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hacke\\\\Desktop\\\\React\\\\crack-off-campus\\\\src\\\\Component\\\\Loading\\\\LoadingComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { setLoggedIn } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadingComponent(props) {\n  _s();\n\n  const store = props.store;\n  const isLoggedin = useSelector(state => state.isLoggedin);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Loading\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Loading_inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.text, \" \", isLoggedIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => store.dispatch(setLoggedIn()),\n        children: \"asf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoadingComponent, \"5LOxJ/ui4kjGEua7JF0gz+I7TbY=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoadingComponent;\nexport default LoadingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingComponent\");","map":{"version":3,"sources":["C:/Users/hacke/Desktop/React/crack-off-campus/src/Component/Loading/LoadingComponent.js"],"names":["React","useSelector","setLoggedIn","LoadingComponent","props","store","isLoggedin","state","text","isLoggedIn","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAMC,KAAK,GAACD,KAAK,CAACC,KAAlB;AACA,QAAMC,UAAU,GAACL,WAAW,CAACM,KAAK,IAAEA,KAAK,CAACD,UAAd,CAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA,mBAAMF,KAAK,CAACI,IAAZ,OAAmBC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAIJ,KAAK,CAACK,QAAN,CAAeR,WAAW,EAA1B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQC,gB;UAEUF,W;;;KAFVE,gB;AAYT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setLoggedIn } from \"../../redux/actions/actions\";\r\nfunction LoadingComponent(props) {\r\n  const store=props.store;\r\n  const isLoggedin=useSelector(state=>state.isLoggedin)\r\n  return (\r\n    <div className=\"Loading\">\r\n      <div className=\"Loading_inner\">\r\n        <h1 >{props.text} {isLoggedIn}</h1>\r\n        <button onClick={()=>store.dispatch(setLoggedIn())}>asf</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default LoadingComponent;"]},"metadata":{},"sourceType":"module"}