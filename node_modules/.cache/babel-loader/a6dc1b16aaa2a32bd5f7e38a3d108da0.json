{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hacke\\\\Desktop\\\\React\\\\crack-off-campus\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { getApiReference } from './Api/Api';\nimport LoadingComponent from './Component/Loading/LoadingComponent';\nimport LoginSignupComponent from './Component/LoginSignup/LoginSignupComponent';\nimport CrackOffCampus from './Component/CrackOffCampus-Jobs/CrackOffCampus/CrackOffCampus'; //redux\n\nimport store from './redux/store/store';\nimport { Provider } from 'react-redux';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedIn, setUserDetatil, setInformation_announcementDetails, setJobsData } from \"../src/redux/actions/actions\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiLoadingText = {\n  \"text\": \"Crack of Campus\"\n};\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = React.useState(null);\n  const [isLoggedIn, setLoggenIn] = React.useState(false); // ApiCall from Reference\n\n  React.useEffect(() => {\n    getApiReference().then(result => {\n      setTimeout(() => {\n        setData(result.data);\n      }, 1500);\n    });\n  }, []); //Rendering Root Component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", data == null ? /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [\" \", /*#__PURE__*/_jsxDEV(LoadingComponent, { ...apiLoadingText,\n        store: store\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 56\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this) : //Data Fetched Sussessfully\n    // checking for Login\n    !isLoggedIn ?\n    /*#__PURE__*/\n    // Need To Login\n    _jsxDEV(Provider, {\n      store: store,\n      children: [\" \", /*#__PURE__*/_jsxDEV(LoginSignupComponent, {\n        setLoggenIn: setLoggenIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 50\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this) :\n    /*#__PURE__*/\n    // LoggedIn successfully or Already LoggedIn\n    // After Login : CrackoffCampus Is Main Component\n    _jsxDEV(CrackOffCampus, { ...data,\n      setLoggenIn: setLoggenIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"K4lkQwvaetp3jOOvGV4IfMODsxg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hacke/Desktop/React/crack-off-campus/src/App.js"],"names":["React","getApiReference","LoadingComponent","LoginSignupComponent","CrackOffCampus","store","Provider","useDispatch","useSelector","setLoggedIn","setUserDetatil","setInformation_announcementDetails","setJobsData","apiLoadingText","App","dispatch","data","setData","useState","isLoggedIn","setLoggenIn","useEffect","then","result","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,cAAP,MAA2B,+DAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,kCAAtC,EAA0EC,WAA1E,QAA4F,8BAA5F,C,CACA;;;AAGA,MAAMC,cAAc,GAAG;AAAE,UAAQ;AAAV,CAAvB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,QAAQ,GAACR,WAAW,EAA1B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BpB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAlC,CAHW,CAKX;;AAEAlB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBpB,IAAAA,eAAe,GAAGqB,IAAlB,CAAuBC,MAAM,IAAI;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACbP,QAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJD;AAKH,GAND,EAMG,EANH,EAPW,CAcX;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,oBACKA,IAAI,IAAI,IAAT,gBAAkB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX,KAAjB;AAAA,mCAAyB,QAAE,gBAAF,OAAuBQ,cAAvB;AAAuC,QAAA,KAAK,EAAER;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,GAGQ;AACA;AACC,KAACc,UAAF;AAAA;AAEI;AACA,YAAC,QAAD;AAAU,MAAA,KAAK,EAAEd,KAAjB;AAAA,mCAAyB,QAAC,oBAAD;AAAsB,QAAA,WAAW,EAAEe;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAMI;AACA;AACA,YAAC,cAAD,OAAoBJ,IAApB;AAA2B,MAAA,WAAW,EAAEI;AAAxC;AAAA;AAAA;AAAA;AAAA,YAdhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBC;;GAvCIN,G;UACUP,W;;;KADVO,G;AAyCL,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { getApiReference } from './Api/Api';\nimport LoadingComponent from './Component/Loading/LoadingComponent';\nimport LoginSignupComponent from './Component/LoginSignup/LoginSignupComponent';\nimport CrackOffCampus from './Component/CrackOffCampus-Jobs/CrackOffCampus/CrackOffCampus';\n//redux\nimport store from './redux/store/store';\nimport { Provider } from 'react-redux';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedIn, setUserDetatil, setInformation_announcementDetails, setJobsData} from \"../src/redux/actions/actions\";\n//\n\n\nconst apiLoadingText = { \"text\": \"Crack of Campus\" };\n\n\nfunction App() {\n    const dispatch=useDispatch();\n    const [data, setData] = React.useState(null);\n    const [isLoggedIn, setLoggenIn] = React.useState(false);\n\n    // ApiCall from Reference\n\n    React.useEffect(() => {\n        getApiReference().then(result => {\n            setTimeout(() => {\n                setData(result.data)\n            }, 1500)\n        });\n    }, []);\n    //Rendering Root Component\n      \n    return ( \n        <div className = \"App\" > {\n            (data == null) ? (<Provider store={store}> < LoadingComponent {...apiLoadingText} store={store}/> </Provider>\n                ):\n                (\n                    //Data Fetched Sussessfully\n                    // checking for Login\n                    (!isLoggedIn) ?\n                    (\n                        // Need To Login\n                        <Provider store={store}> <LoginSignupComponent setLoggenIn={setLoggenIn}/> </Provider>\n                    ) :\n                    (\n                        // LoggedIn successfully or Already LoggedIn\n                        // After Login : CrackoffCampus Is Main Component\n                        <CrackOffCampus {...data } setLoggenIn={setLoggenIn}/>\n                    )\n\n                )\n            } \n            </div>\n        )\n\n    }\n\n    export default App;"]},"metadata":{},"sourceType":"module"}