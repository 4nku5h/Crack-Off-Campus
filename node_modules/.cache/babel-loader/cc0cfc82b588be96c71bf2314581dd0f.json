{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hacke\\\\Desktop\\\\React\\\\crack-off-campus\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { getApiReference } from './Api/Api';\nimport Loading from './Component/Loading/Loading';\nimport LoginSignUp from './Component/LoginSignUp/LoginSignUp';\nimport CrackOffCampus from './Component/CrackOffCampus/CrackOffCampus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiLoadingText = {\n  \"text\": \"Crack of Campus\"\n};\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [isLoggedIn, setLoggenIn] = React.useState(false); // ApiCall from Reference\n\n  React.useEffect(() => {\n    getApiReference().then(result => {\n      setTimeout(() => {\n        setData(result.data);\n      }, 1500);\n    });\n  }, []);\n\n  function Login(dt) {} //Rendering Root Component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", data == null ? /*#__PURE__*/_jsxDEV(Loading, { ...apiLoadingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }, this) : //Data Fetched Sussessfully\n    // checking for Login\n    !isLoggedIn ?\n    /*#__PURE__*/\n    // Need To Login\n    _jsxDEV(LoginSignUp, {\n      isLoggedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this) :\n    /*#__PURE__*/\n    // LoggedIn successfully or Already LoggedIn\n    // After Login : CrackoffCampus Is Main Component\n    _jsxDEV(CrackOffCampus, { ...data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"gSGZNe9imj92nvjc456g0wwG6II=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hacke/Desktop/React/crack-off-campus/src/App.js"],"names":["React","getApiReference","Loading","LoginSignUp","CrackOffCampus","apiLoadingText","App","data","setData","useState","isLoggedIn","setLoggenIn","useEffect","then","result","setTimeout","Login","dt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;;AACA,MAAMC,cAAc,GAAG;AAAE,UAAQ;AAAV,CAAvB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BX,KAAK,CAACS,QAAN,CAAe,KAAf,CAAlC,CAHW,CAKX;;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClBX,IAAAA,eAAe,GAAGY,IAAlB,CAAuBC,MAAM,IAAI;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACbP,QAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJD;AAKH,GAND,EAMG,EANH;;AASA,WAASS,KAAT,CAAeC,EAAf,EAAkB,CAEjB,CAlBU,CAoBX;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,oBACKV,IAAI,IAAI,IAAT,gBAAmB,QAAE,OAAF,OAAcF;AAAd;AAAA;AAAA;AAAA;AAAA,YAAnB,GAGQ;AACA;AACC,KAACK,UAAF;AAAA;AAEI;AACA,YACA,WADA;AACY,MAAA,UAAU;AADtB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAOI;AACA;AACA,YACA,cADA,OACmBH;AADnB;AAAA;AAAA;AAAA;AAAA,YAfhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BC;;GAhDID,G;;KAAAA,G;AAkDL,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { getApiReference } from './Api/Api';\nimport Loading from './Component/Loading/Loading';\nimport LoginSignUp from './Component/LoginSignUp/LoginSignUp';\nimport CrackOffCampus from './Component/CrackOffCampus/CrackOffCampus';\nconst apiLoadingText = { \"text\": \"Crack of Campus\" };\n\n\nfunction App() {\n\n    const [data, setData] = React.useState(null);\n    const [isLoggedIn, setLoggenIn] = React.useState(false);\n\n    // ApiCall from Reference\n\n    React.useEffect(() => {\n        getApiReference().then(result => {\n            setTimeout(() => {\n                setData(result.data)\n            }, 1500)\n        });\n    }, []);\n\n\n    function Login(dt){\n      \n    }\n\n    //Rendering Root Component\n\n    return ( \n        <div className = \"App\" > {\n            (data == null) ? ( < Loading {...apiLoadingText }\n                />):\n                (\n                    //Data Fetched Sussessfully\n                    // checking for Login\n                    (!isLoggedIn) ?\n                    (\n                        // Need To Login\n                        <\n                        LoginSignUp isLoggedIn/ >\n                    ) :\n                    (\n                        // LoggedIn successfully or Already LoggedIn\n                        // After Login : CrackoffCampus Is Main Component\n                        <\n                        CrackOffCampus {...data }\n                        />\n                    )\n\n                )\n            } \n            </div>\n        )\n\n    }\n\n    export default App;"]},"metadata":{},"sourceType":"module"}